{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["var jetpack = require('fs-jetpack');\nvar gui = require('nw.gui');\nvar fs = require('fs');\nvar request = require('request');\nconst EventEmitter = require('events');\nconst util = require('util');\nglobal.$ = $;\n\nimport { Cascade } from './modules/cascade';\nimport { Messages } from './modules/messages';\nimport { Project } from './modules/project';\nimport { Ui } from './modules/ui';\nimport { utils } from './modules/utils';\n\nvar win = gui.Window.get();\nglobal.win = win;\n\n\n/**\n * Creates an instance of the application.\n * @constructor\n * @param {Object} settings - The configuration settings to configure the application.\n * @param {string} settings.appPath - The path of the nw.js application.\n * @param {string} settings.folderIcon - The path to an image file to use for project folders.\n * @param {string} settings.fileIcon - The path to an image file to use for output '.scc' files.\n * @param {boolean} settings.appWasUpdated - Marks if this is the first time launching the app after the app was updated.\n * @param {boolean} settings.firstLaunch - Marks if this is the first time opening the applcation.\n * @param {string} settings.gulpPath - The path of the internal Gulp compiler.\n * @param {string} settings.altGulpPath - The path of an alternative Gulp compiler to use.\n * @param {string} settings.useAltGulpPath - Marks if the alternative Gulp compiler should be used instead of the internal compiler.\n * @param {string} settings.userPluginsFolder - The path to a folder that contains additional user-supplied plugins for the Gulp compiler to use.\n */\nvar App = function (settings) {\n\n\t/**\n     * @alias App#\n     */\n\tvar self = this;\n\n\t/**\n\t * The primary instance of the application. Refer to documentation for {@link App}.\n\t * @namespace\n\t */\n\tglobal.app = self;\n\n\tself.emit('start', {\n\t\tmessage: \"The application is starting.\"\n\t});\n\n\t/**\n     * The path of the nw.js application contents.\n     */\n\tself.path = settings.appPath;\n\n\t/**\n     * The primary application window.\n     */\n\tself.window = win;\n\n\t/**\n     * A bunch of helpful utility methods. Refer to documentation for {@link utils}\n     */\n\tself.utils = utils;\n\n\t/**\n     * The current application environment.\n     */\n\tself.environment = global.environment;\n\n\tvar gulpPath;\n\tvar cascade;\n\n\t/**\n     * Triggers an event and if applicable, sends message data to the message manager.\n     * @param {string} eventName - The name of the event being triggered.\n     * @param {object} eventData - Data to be sent along with the event.\n     * @param {number} messageCode - The code number of the message type to handle the event message.\n     */\n\tself.trigger = function(eventName, eventData, messageCode) {\n\t\tself.emit(eventName, eventData);\n\t\tself.message.send(eventName, eventData, messageCode);\n\t}\n\t\n\t/**\n     * Opens a project.\n     * @param {string} path - The path of the project to be opened.\n     * @param {function} callback - Callback to run after function has executed.\n     */\n\tself.open = function (path, callback) {\n\t\tself.trigger('loading:start');\n\t\tvar defaultProjectDir = gulpPath + cascade.defaultProjectDir;\n\n\t\t/**\n\t     * Primary instance of the current project. Refer to documentation for {@link Project}.\n\t     */\n\t\tself.project = new Project(path, function (success) {\n\t\t\tif (callback) {\n\t\t\t\tcallback(success);\n\t\t\t}\n\t\t\tif (success === true) {\n\t\t\t\tself.utils.addToRecentProjects(path);\n\t\t\t\tself.trigger('open', {\n\t\t\t\t\tmessage: \"Project at '\" + path + \"' opened successfully.\"\n\t\t\t\t}, 7);\n\t\t\t\tself.trigger('loading:end');\n\t\t\t} else {\n\t\t\t\tself.trigger('open', {\n\t\t\t\t\tmessage: \"Project at '\" + path + \"' failed to open.\",\n\t\t\t\t\terror: \"There was an error initializing the project. Please make sure the folder contains a valid Casade project.\"\n\t\t\t\t}, 6);\n\t\t\t\tself.trigger('loading:end');\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n     * Closed the currently open project.\n     * @param {function} callback - Callback to run after function has executed.\n     */\n\tself.close = function(callback) {\n\t\tvar cascade = self.cascade.get('settings');\n\t\tself.cascade.stop(function() {\n\t\t\tself.project = self.open(gulpPath + cascade.defaultProjectDir, function(success) {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(success);\n\t\t\t\t}\n\t\t\t\tif (success === true) {\n\t\t\t\t\tself.trigger('close', {\n\t\t\t\t\t\tmessage: \"Project closed successfully.\"\n\t\t\t\t\t}, 7);\n\t\t\t\t} else if (success === false) {\n\t\t\t\t\tself.trigger('close', {\n\t\t\t\t\t\tmessage: \"Project failed to close.\",\n\t\t\t\t\t\terror: \"Unknown error.\"\n\t\t\t\t\t}, 8);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n     * Creates a new project.\n     * @param {string} path - The path of the folder that will contain the project folder.\n     * @param {string} name - The name of the project (will also be used as the folder name of the project).\n     * @param {function} callback - Callback to run after function has executed.\n     */\n\tself.new = function(path, name, callback) {\n\t\tself.project = new Project(path, function (success) {\n\t\t\tconsole.log(\"new\", success);\n\t\t\tif (callback) {\n\t\t\t\tcallback(success);\n\t\t\t}\n\t\t\tif (success === true) {\n\t\t\t\tself.utils.addToRecentProjects(path + \"/\" + name);\n\t\t\t\tself.trigger('new', {\n\t\t\t\t\tmessage: \"Project at '\" + path + \"/\" + name +  \"' created successfully.\"\n\t\t\t\t}, 7);\n\t\t\t} else if (success === false) {\n\t\t\t\tself.trigger('new', {\n\t\t\t\t\tmessage: \"Failed to create project at '\" + path + \"/\" + name +  \"'.\",\n\t\t\t\t\terror: \"Unknown error.\"\n\t\t\t\t}, 6);\n\t\t\t}\n\t\t}, name);\n\t}\n\n\t/**\n     * Returns the specified property of the application instance.\n     * @param {string} type - The property for which to return the value of.\n     * @param {function} callback - Callback to run after function has executed.\n     */\n\tself.get = function(type, callback) {\n\t\tvar event = {\n\t\t\tmessage: \"The 'get' function was called.\",\n\t\t\tdata: {}\n\t\t}\n\t\tevent.data.key = type;\n\t\tif (type === 'project') {\n\t\t\tevent.data.value = self.project;\n\t\t\tif (callback) {callback(self.project)}\n\t\t\treturn self.project\n\t\t} else if (type === 'settings') {\n\t\t\tevent.data.value = settings;\n\t\t\tif (callback) {callback(settings)}\n\t\t\treturn settings\n\t\t} else if (type === 'cascade') {\n\t\t\tevent.data.value = self.cascade;\n\t\t\tif (callback) {callback(self.cascade)}\n\t\t\treturn self.cascade\n\t\t} else if (type === undefined) {\n\t\t\tevent.data.value = self;\n\t\t\tevent.data.key = 'self';\n\t\t\tif (callback) {callback(self)}\n\t\t\treturn self\n\t\t} else {\n\t\t\tevent.data.value = settings[type];\n\t\t\tif (callback) {callback(settings[type])}\n\t\t\treturn settings[type];\n\t\t}\n\t\tself.trigger('get', event);\n\t}\n\n\t/**\n     * Sets the specified property of the application instance.\n     * @param {string} key - The property key to set.\n     * @param {string} value - The property value to set.\n     * @param {function} callback - Callback to run after function has executed.\n     */\n\tself.set = function(key, value, callback) {\n\t\tvar event = {\n\t\t\tmessage: \"The 'set' function was called.\",\n\t\t\tdata: {}\n\t\t}\n\t\tsettings[key] = value;\n\t\tvar packageJson = jetpack.read('./package.json', 'json');\n\t\tpackageJson['specless-cascade'] = settings;\n\t\tjetpack.write('./package.json', packageJson);\n\t\tif (callback) {\n\t\t\tcallback(settings[key]);\n\t\t}\n\t\tevent.data.key = key;\n\t\tevent.data.value = settings[key];\n\t\tself.trigger('set', event);\n\t\treturn settings[key];\n\t}\n\n\t/**\n     * Restarts the application\n     */\n\tself.restart = function() {\n\t\tvar exec = require('child_process').exec;\n\n\t\tvar runNwApp = function () {\n\t\t\tvar nwPath = utils.nwPath();\n\t\t    exec('sleep 1s\\n' + nwPath + ' ' + self.path, {detached: true});\n\t\t};\n\t\tself.trigger('restart', {\n\t\t\tmessage: \"Application restarting.\"\n\t\t});\n\t\tif (global.environment === 'production') {\n\t\t\tvar appPath = self.path.split('/');\n\t\t\tappPath.pop();\n\t\t\tappPath.pop();\n\t\t\tappPath.pop();\n\t\t\tvar reg = new RegExp(' ','g');\n\t\t\tappPath = appPath.join('/').replace(reg, '\\\\ ');\n\t\t\texec('sleep 1s\\nopen ' + appPath, {detached: true});\n\t\t\tgui.App.quit();\n\t\t} else {\n\t\t\trunNwApp();\n\t\t\tgui.App.quit();\n\t\t}\n\t}\n\t/**\n     * Checks if there is an update to the application available. If available, downloads and unpacks the contents to the current application directory, overwriting the existing application.\n     * @param {function} callback - Callback to run after function has completed executing.\n     */\n\tself.update = function(callback) {\n\t\tvar yauzl = require(\"yauzl\");\n\t\tvar githubUser = 'specless';\n\t\tvar githubRepo = 'cascade-app-source';\n\t\tvar fstream = require('fstream');\n\t\tvar pathUtil = require(\"path\");\n\t\tvar mkdirp = require(\"mkdirp\");\n\n\t\tself.trigger('update:start', {\n\t\t\tmessage: \"Checking for updated version.\",\n\t\t});\n\t\tutils.checkGithub(githubUser, githubRepo, function(fileUrl, err) {\n\t\t\tif (!err) {\n\t\t\t\tif (fileUrl !== false) {\n\t\t\t\t\tutils.downloadFile(fileUrl, function(path, file, err) {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tvar output = path + '/' + file;\n\t\t\t\t\t\t\tvar totalFiles = 30000;\n\t\t\t\t\t\t\tvar filesProcessed = 0;\n\t\t\t\t\t\t\tvar percent = 0;\n\t\t\t\t\t\t\tvar appSettings = self.get('settings');\n\t\t\t\t\t\t\tvar cascadeSettings = self.cascade.get('settings');\n\n\t\t\t\t\t\t\tyauzl.open(output, {lazyEntries: true}, function(err, zipfile) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tself.trigger('update:end', {\n\t\t\t\t\t\t\t\t\t\tmessage: \"There was an error reading the downloaded update. File may have been corrupted.\",\n\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t}, 6);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttotalFiles = zipfile.entryCount;\n\t\t\t\t\t\t\t\t\tzipfile.readEntry();\n\t\t\t\t\t\t\t\t\tzipfile.on(\"entry\", function(entry) {\n\t\t\t\t\t\t\t\t\t\tvar newFilePath = entry.fileName.split('/');\n\t\t\t\t\t\t\t\t\t    newFilePath.shift();\n\t\t\t\t\t\t\t\t\t    newFilePath = self.path + '/' + newFilePath.join('/');\n\t\t\t\t\t\t\t\t\t\tif (/\\/$/.test(entry.fileName)) {\n\t\t\t\t\t\t\t\t\t\t\tfilesProcessed = filesProcessed + 1;\n\t\t\t\t\t\t\t\t\t        percent = filesProcessed / totalFiles;\n\t\t\t\t\t\t\t\t\t        self.ui.unzipProgress(percent);\n\t\t\t\t\t\t\t\t\t      \tzipfile.readEntry();\n\t\t\t\t\t\t\t\t\t    } else {\n\t\t\t\t\t\t\t\t\t      \tzipfile.openReadStream(entry, function(err, readStream) {\n\t\t\t\t\t\t\t\t\t\t        if (err) {\n\t\t\t\t\t\t\t\t\t\t        \tself.trigger('update:end', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"There was an error unpacking the updated version.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, 6);\n\t\t\t\t\t\t\t\t\t\t        } else {\n\t\t\t\t\t\t\t\t\t\t\t        mkdirp(pathUtil.dirname(newFilePath), function(err) {\n\t\t\t\t\t\t\t\t\t\t\t            if (err) {\n\t\t\t\t\t\t\t\t\t\t\t            \tself.trigger('update:end', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"There was an error unpacking the updated version.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, 6);\n\t\t\t\t\t\t\t\t\t\t\t            } else {\n\t\t\t\t\t\t\t\t\t\t\t\t          \treadStream.pipe(fs.createWriteStream(newFilePath));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadStream.on(\"end\", function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilesProcessed = filesProcessed + 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercent = filesProcessed / totalFiles;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tself.ui.unzipProgress(percent);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tzipfile.readEntry();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t            }\n\t\t\t\t\t\t\t\t\t\t\t        });\n\t\t\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t      \t});\n\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tzipfile.on(\"close\", function (err) {\n\t\t\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t\t\tself.set('altGulpPath', appSettings.altGulpPath);\n\t\t\t\t\t\t\t\t\t\t\tself.set('autoReload', appSettings.autoReload);\n\t\t\t\t\t\t\t\t\t\t\tself.set('firstLaunch', appSettings.firstLaunch);\n\t\t\t\t\t\t\t\t\t\t\tself.set('proxy', appSettings.proxy);\n\t\t\t\t\t\t\t\t\t\t\tself.set('serverPort', appSettings.serverPort);\n\t\t\t\t\t\t\t\t\t\t\tself.set('trayMode', appSettings.trayMode);\n\t\t\t\t\t\t\t\t\t\t\tself.set('useAltGulpPath', appSettings.useAltGulpPath);\n\t\t\t\t\t\t\t\t\t\t\tself.set('appWasUpdated', true);\n\t\t\t\t\t\t\t\t\t\t\tself.cascade.set('currentProjectDir', cascadeSettings.currentProjectDir);\n\t\t\t\t\t\t\t\t\t\t\t// clearInterval(self.update.interval);\n\t\t\t\t\t\t\t\t\t\t\tself.trigger('update:end', {\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"Application has been updated.\",\n\t\t\t\t\t\t\t\t\t\t\t\terror: \"Click to restart. Application will not function properly until restarted.\",\n\t\t\t\t\t\t\t\t\t\t\t\tfeatureToggle: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.restart();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}, 8);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tself.trigger('update:end', {\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"There was an error copying the updated version.\",\n\t\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t\t}, 6);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tself.ui.unzipProgress(1);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\n\n\n\n\n\t\t\t\t\t\t\t//var writeStream = fstream.Writer(path);\n\n\t\t\t  \t\t\t\t// self.on('end', function() {\n\t\t\t  \t\t\t\t// \tself.emit('unzip');\n\t\t\t  \t\t\t\t// \tconsole.log(\"UNZIPPED!\");\n\t\t\t\t    \t// \t\tvar version = file.replace('.zip', '').replace('v','');\n\t\t\t\t    \t// \t\tvar directory = path + '/' + githubRepo + '-' + version;\n\t\t\t\t    \t// \t\tvar defaultSettings = require(directory + '/package.json');\n\t\t\t\t    \t// \t\tvar currentSettings = self.get('settings');\n\t\t\t\t    \t// \t\tdefaultSettings[\"specless-cascade\"].altGulpPath = currentSettings.altGulpPath;\n\t\t\t\t    \t// \t\tdefaultSettings[\"specless-cascade\"].autoReload = currentSettings.autoReload;\n\t\t\t\t    \t// \t\tdefaultSettings[\"specless-cascade\"].firstLaunch = currentSettings.firstLaunch;\n\t\t\t\t    \t// \t\tdefaultSettings[\"specless-cascade\"].proxy = currentSettings.proxy;\n\t\t\t\t    \t// \t\tdefaultSettings[\"specless-cascade\"].serverPort = currentSettings.serverPort;\n\t\t\t\t    \t// \t\tdefaultSettings[\"specless-cascade\"].trayMode = currentSettings.trayMode;\n\t\t\t\t    \t// \t\tdefaultSettings[\"specless-cascade\"].useAltGulpPath = currentSettings.useAltGulpPath;\n\t\t\t\t    \t// \t\tjetpack.write(directory + '/package.json', defaultSettings);\n\n\t\t\t\t    \t// \t\t// var newCascadeSettings = require(directory + settings.gulpPath + '/package.json');\n\t\t\t\t    \t// \t\t// newCascadeSettings[\"specless-cascade\"].currentProjectDir = self.cascade.get('currentSettings');\n\t\t\t\t    \t// \t\t// jetpack.write(directory + settings.gulpPath + '/package.json', newCascadeSettings);\n\n\t\t\t\t    \t// \t\tutils.copyNewAppFiles(directory, self.path, function(err) {\n\t\t\t\t    \t// \t\t\tif (!err) {\n\t\t\t\t    \t// \t\t\t\tself.trigger('update:end', {\n\t\t\t\t\t\t\t\t\t// \t\tmessage: \"Copied files, ok to restart.\"\n\t\t\t\t\t\t\t\t\t// \t}, 7);\n\t\t\t\t    \t// \t\t\t} else {\n\t\t\t\t    \t// \t\t\t\tself.trigger('update:end', {\n\t\t\t\t\t\t\t\t\t// \t\tmessage: \"There was an error copying the updated version.\",\n\t\t\t\t\t\t\t\t\t// \t\terror: err\n\t\t\t\t\t\t\t\t\t// \t}, 6);\n\t\t\t\t    \t// \t\t\t}\n\t\t\t\t    \t// \t\t});\n\t\t\t\t\t    // \t});\n\n\t\t\t\t\t   //  \tvar once = false\n\n\t\t\t\t\t   //  \tself.on('errordsad', function(err) {\n\t\t\t\t\t   //  \t\tif (once === false) {\n\t\t\t\t\t\t  //   \t\tself.trigger('update:end', {\n\t\t\t\t\t\t\t\t// \t\tmessage: \"There was an error unpacking the updated version.\",\n\t\t\t\t\t\t\t\t// \t\terror: err\n\t\t\t\t\t\t\t\t// \t}, 6);\n\t\t\t\t\t\t\t\t// \tonce = true;\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t   //  \t});\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.trigger('update:end', {\n\t\t\t\t\t\t\t\tmessage: \"There was an error downloading the latest version.\",\n\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t}, 6);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tself.trigger('update:end', {\n\t\t\t\t\t\tmessage: \"The current version is the latest. No update required.\",\n\t\t\t\t\t}, 7);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.trigger('update:end', {\n\t\t\t\t\tmessage: \"There was an error checking github.\",\n\t\t\t\t\terror: err\n\t\t\t\t}, 7);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n     * Sets up and initializes the application instance.\n     * @private\n     */\n\tself._init = function () {\n\n\t\t/**\n\t     * Primary instance of the message manager. Refer to documentation for {@link Messages}.\n\t     */\n\t\tself.message = new Messages();\n\t\tself.set('appPath', settings.appPath);\n\t\tself.set('userPluginsFolder', settings.userPluginsFolder);\n\t\tif (settings.useAltGulpPath === true && settings.altGulpPath !== null) {\n\t\t\tgulpPath = settings.altGulpPath;\n\t\t\tself.trigger('compiler:ready', {\n\t\t\t\tmessage: \"Using alternative Cascade compiler located at '\" + gulpPath + \"'.\",\n\t\t\t\tdata: {usingAlt: true}\n\t\t\t}, 7);\n\t\t} else {\n\t\t\tgulpPath = settings.appPath + settings.gulpPath;\n\t\t\tself.trigger('compiler:ready', {\n\t\t\t\tmessage: \"Using built-in Cascade compiler located at '\" + gulpPath + \"'.\",\n\t\t\t\tdata: {usingAlt: false}\n\t\t\t}, 7);\n\t\t}\n\t\t/**\n\t     * Primary instance of the Cascade Gulp wrapper. Refer to documentation for {@link Cascade}.\n\t     */\n\t\tself.cascade = new Cascade(gulpPath);\n\n\t\t/**\n\t     * Primary instance of the user interface. Refer to documentation for {@link Ui}.\n\t     */\n\t\tself.ui = new Ui();\n\t\t\n\t\tcascade = self.cascade.get('settings');\n\t\tself.cascade.set('userPluginsFolder', settings.userPluginsFolder);\n\t\tfs.access(settings.userPluginsFolder, fs.F_OK, function(err) {\n\t\t    if (err) {\n\t\t        fs.mkdirSync(settings.userPluginsFolder);\n\t\t        self.trigger('plugins:ready', {\n\t\t\t\t\tmessage: \"Plugins folder didn't exist. Created '\" + settings.userPluginsFolder + \"'. Plugins ready.\",\n\t\t\t\t\tdata: {createdFolder: true}\n\t\t\t\t}, 7);\n\t\t    } else {\n\t\t    \tself.trigger('plugins:ready', {\n\t\t\t\t\tmessage: \"Plugins folder exists. Plugins ready.\",\n\t\t\t\t\tdata: {createdFolder: false}\n\t\t\t\t}, 7);\n\t\t    }\n\t\t});\n\t\tvar requestConfig = {}\n\t\tif (settings.proxy) {\n\t\t\trequestConfig.proxy = settings.proxy;\n\t\t}\n\t\tself.request = request.defaults(requestConfig);\n\t\tif (settings.appWasUpdated === true) {\n\t\t\tself.trigger('update:live', {\n\t\t\t\tmessage: \"Running updated version of application.\",\n\t\t\t\terror: \"New version is: \" + gui.App.manifest.version\n\t\t\t}, 8);\n\t\t\tself.set('appWasUpdated', false);\n\t\t}\n\t\tself.update();\n\t\t// self.update.interval = setInterval(self.update(), 3600000);\n\t\tself.trigger('init', {\n\t\t\tmessage: \"The application initialized successfully.\"\n\t\t}, 7);\n\t\tif (!settings.firstLaunch) {\n\t\t\tif (cascade.currentProjectDir) {\n\t\t\t\tself.open(cascade.currentProjectDir);\n\t\t\t}\n\t\t} else {\n\t\t\t// Once we have a first use experience, run that here.\n\t\t\tself.cascade.set('currentProjectDir', null);\n\t\t\tself.set('firstLaunch', false);\n\t\t\tself.trigger('firstLaunch', {\n\t\t\t\tmessage: \"Welcome to Cascade! Looks like this is your first time running the app.\"\n\t\t\t}, 7);\n\t\t}\n\t}\n\n\tself._init();\n\n}\n\nutil.inherits(App, EventEmitter);\n\nvar packageJson = jetpack.read('./package.json', 'json');\n\nglobal.environment = packageJson.environment;\n\nvar settings = packageJson['specless-cascade'];\n\tsettings.appPath = process.cwd();\n\tsettings.node = settings.appPath + '/node-v4.4.6-darwin-x64/bin/node';\n\tsettings.node = '/usr/local/bin/node';\n\tsettings.userPluginsFolder = gui.App.dataPath + '/Plugins';\n\nvar app = new App(settings);\n\n\n\n\n\n\n\n\n\n\n\n//global.myProject = new Project('/Users/scorby/Dev/defaultCascadeProjectTest', \"My Name\");\n"],"sourceRoot":"/source/"}